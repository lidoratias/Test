  Linux
----------

https://www.youtube.com/watch?v=wsh64rjnRas - linux 6 hours course - 6H
https://www.youtube.com/watch?v=2PGnYjbYuUo - bash commands from Beginners to Advance - 3H
https://www.youtube.com/watch?v=HIXzJ3Rz9po - lerning linux file system - 25M V


expline about : 
tty - הדפסת הטרמינל הנוכחי
single mode - מצב הרצה עם משתמש יחיד שקיים בלינוקס. מצב זה רץ עם מינימום נדרש של פונקציונליות, טוב למקרה שיש
בעיה עם מערכת ההפעלה וצריך לבדוק דברים במצב הרצה מינימלי.
udev - קוד שמזהה כל התקן חיצוני שמתחבר למחשב בזמן החיבור, והוא חשוף מספיק
בשביל שמשתמשים יוכלו לתכנת אותו לבצע פעולות מסוימות עם חיבור של מכשיר מסוים.
fsck - פקודה לתיקון בעיות עם מערכת הקבצים כשמערכת ההפעלה לא נטענת
mkfs - פרמוט מחיצה עם מערכת קבצים מסוג מסוים, ניתן כקלט לפקודה
sshd - פקודה שנותנת תשתית של תקשורת בין שני הוסטים שלא בוטחים אחד בשני
בתצורה של אס אס אייץ'. כשמפעילים את הפקודה היא מאזינה לחיבורים של קליינטים
http - פרוטוקול שכבת אפליקציה להעברת הודעות, כל הודעה מועברת בחיבור משלה
תוך ציון מחדש של הפרטים של השולח.
smb - פרוטוקול שיתוף קבצים קרוס-פלטפורם במודל של קליינט/סרבר
networkManager - תוכנה לניהול ממשקי החיבור של המחשב עם מחשבים אחרים דרך הרשת
grub - מנהל אתחול, תוכנה שעולה עם הדלקת המחשב ומאפשרת לבחור בין אחת מבין
מספר מערכות הפעלה שמותקנות במחשב, וכולל מידע על מקום האחסון של כל מערכת ושמה
root - יש כמה משמעויות, יש את משתמש הרוט, שהוא משתמש העל שיש לו גישה
לכל מקום ולכל דבר במחשב. בנוסף, יש את תיקיית הרוט, שהיא התיקייה הגבוהה
ביותר מבין התיקיות בלינוקס, וכל תיקייה אחרת חייבת להיות תחתיה (צאצאית שלה)
emergency mode - מצב הרצה של לינוקס ללא גוי, אלא במצב טרמינלי בלבד עם אפשרות
להפעיל פקודות. זה נועד לתקן בעיות בלינוקס גם כשמצב רסקיו לא זמין, וזה
מריץ את הלינוקס עם המינימום של המשאבים שנדרשים בשביל להריץ את מערכת ההפעלה.
run level - every each one - אלו מצבי מערכת, ממוספרים מ-0 עד 6 ואומרים
איזה שירותים רצים ואיזה לא בכל אחד מהם.
0 – System halt אפשר לכבות את המערכת, אין פעילות.
1 – Single user mode - הרצה עם משתמש יחיד בלבד.
2 – Multiple user mode with no NFS(network file system) - מספר משתמשים ללא מערכת קבצים NFS.
3 – Multiple user mode under the command line interface and not under the graphical user interface.
4 – User-definable.
5 – Multiple user mode under GUI (graphical user interface) and this is the standard runlevel for most of the LINUX based systems.
6 – Reboot which is used to restart the system.
כל מצב כזה מתאר את מצב המערכת, וכשמעלים את מערכת ההפעלה, נקראת הפעולה
איניט, ומעלה את המערכת לפי האינדקס הרלוונטי.
bashrc - סקריפט של שמריץ סשן של באש ברגע שמבקשים לפתוח באש חדש.
ext4 - xfs -diffrences - שני פורמטים של מערכת קבצים שאפשר להצמיד
למחיצות שיוצרים במערכת הקבצים המרכזית של לינוקס.
אקס אף אס - יכול להכיל נפח כללי יותר גדול, אותו גודל של שמות קבצים
תר תתי תיקיות מאי אקס טי 4, שלעומתו יכול להכיל קבצים גדולים יותרר.
אקס אף אס גם יכול להכיל יותר קבצים מאשר אי אקס טי 4.
fat32 - סוג של מערכת קבצים שמיועד לאחסון הרבה פחות זיכרון מאשר השניים הקודמים.
פה אפשר כבר לאחסן נפח כללי הרבה פחות גדול וגם כל קובץ צריך להיות קטן יותר.
journaling - מעקב אחר הפעולות שבוצעו במערכת קבצים, עושים את זה
בשביל האפשרות לבצע שחזור במקרה של תקלה או קריסה של מערכת הקבצים.
זה גם משמש כשרוצים להחליף את מערכת הקבצים במחיצה במסגרת של פרמוט,
אך לא רוצים לאבד את הקבצים הקיימים.
superblock - מחזיק מידע על מאפייני מערכת הקבצים, גודלה, גודל בלוק, בלוקים מלאים וריקים, גודל ומיקום טבלת האיי נוד
dns - פרוטוקול של מיפוי בין כתובות טקסטואליות לכתובות איי פי.
הוא הומצא בגלל הקושי לזכור כתובות מספריות והצורך בכתובות טקסטואליותתואמות.
הפרוטוקול מתבצע על ידי פנייה לשרת על כלשהו, הפנייה ממנו לשרת ספציפי 
יותר מבחינת הכתובת המבוקשת, וכך עד שמגיעים לשרת האחראי על הכתובת שחיפשתם.
dhcp - פרוטוקול של השכרת כתובות איי פי לגלישה ברשת.
אנחנו פונים לשרת די אייץ' סי פי, מקבלים כתובת בהשכרה, וכשההשכרה 
נגמרת פונים שוב ומבקשים כתובת חדשה לגלוש איתה.
swap - החלק בזיכרון בדיסק הקשיח שמשמש לאחסון דפי זיכרון כאשר זיכרון הראם מלא
ntp - פרוטוקול סנכרון זמן בין מחשבים שונים, המתבסס על ההפרשים בין הזמנים במחשב המספק את הזמן והמחשב הצורך את הזמן.
הפרוטוקול מבוסס על מודל שכבתי עם מקסימום 256 שכבות, כל שכבה גדול יותר מקודמתה והסנכרון הוא מהרמה האיי לרמה האיי פלוס אחד
וככה הסנכרון משורשר משכבה לשכבה עד לשכבה התחתונה.
journalctl - דיימון שרץ ברקע וקורא את הלוגים שמפיקים כל השירותים שרצים במערכת. בשימוש בפעולה הזו אפשר
להציג על גבי המסך את כל הלוגים, או כמובן להפעיל סינונים מסויימים על הלוגים.
file types:
קובץ רגיל
תיקייה
קובץ בלוק, שזה למעשה קובץ חומרה
קובץ פייפ, מייצג קובץ בפורמט של פיפו
קובץ סטרים, שזה קובץ שמייצג סטרים של אינפוט אאוטפוט, טרמינל הוא דוגמא טובה לאחד כזה
קובץ סוקט, קובץ שמשמש לתקשורת בין אפליקציות ואפשר לקרוא מהבאפר שלו או לכתוב לשם בשביל להעביר מידע
קובץ לינק, יש הארד לינק וסופט לינק, הסברתי כבר במקום אחר פה את ההבדל
hidden files - קבצים נסתרים ששמם מתחיל בנקודה. הם לא מוצגים בברירת מחדל במערכת, אך אפשר לשנות את זה בהגדרות,
ובשביל לראות אותם בהפעלת פקודת אל אס, צריך להוסיף את הפלאג דאש איי.
iptables - תוכנת חומת אש בלינוקס. הטבלאות שמוחזקות כאן מנתרות מידע לפי סט של חוקים שאני מגדיר.
המידע המנותר הוא עבור חבילות שיוצאות ממני או עבור חבילות שנכנסות אליי. בנוסף גם קשור
לחבילות שאמורות לעבור דרכי, אך אני לא היעד הסופי של החבילה אלא רק גורם ביניים בדרך.
לטבלאות אפשר להוסיף חוקים ולמחוק מהן חוקים, וכל חבילה שעוברת דרכי שלא עומדת באחד מהחוקים נזרקת
firewalld - כלי שמשמש להוספת חוקים לטבלאות שיש באיי פי טייבלס
daemons - מעין שירותים שרצים ברקע במערכת לינוקס
/etc/hosts - קובץ למיפוי שמות דומיינים לכתובות איי פי 
/etc/resolve - קובץ טקסט שקובע מי הדי אן אס ריסולבר שלי
/home/ - תיקיית הבית 
/usr/lib - תיקייה המכילה ספריות בינאריות של התכנות שמותקנות עבור המשתמש במערכת ההפעלה
/bin - תיקיית קבצים בינאריים של פקודות שצריכות להיות זמינות במצב הרצה של משתמש יחיד, כמו סי פי, קאט, אל אס ועוד
/opt - תיקייה להתקנת חבילות שלא כחלק מבאנדלים, כלומר הן לא חלק מההפצה של מע"ה, אבל מסופקות על ידי מקור צד שלישי.
יש שם קבצי קונפיגורציה, פקודה להרצה, לוגים ועוד. כל חבילה תחת תיקייה משל עצמה.
/proc - תיקייה שמכילה מידע על מערכת ההפעלה, כולל על תהליכים, הקרנל ופרמטרים לקונפיגורציה.
בתיקייה זו קיימים גם קבצים וירטואליים, שאינם קיימים באמת אלא נוצרים על ידי מערכת ההפעלה כשיש ניסיון לגשת אליהם.

commands:
history - צפייה בהיסטוריית הפקודות האחרונות שרצו בטרמינל
grep - חיפוש של ביטוי מסוים בקובץ, שניהם מתקבלים כפרמטר
lsof - הצגת הקבצים הפתוחים שזמינים לתהליכים שרצים. ממוין לפי סוגי
קבצים, אפשר להציג רק סוגים מסוימים.
awk - פקודה שמאפשרת לכתוב סקריפטים לחיפוש תבניות בטקסטים וביצוע
פעולות מסוימות עבור מאצ'ים שנמצאים
watch - פקודה שמריצה פקודה אחרת כל איקס שניות, ואפשר להראות באמצעותה את השינוי בפלט לאחר כל הרצה.
אפשר גם לדאוג שהלולאה תפסיק כשהפלט משתנה.
mkdir - יצירה של תיקייה חדשה
rm - מחיקה של קובץ
cp - העתקה של קובץ ממקום אחד לאחר
vim - פקודה שמפעילה את עורך הווים על קובץ לבחירתנו שניתן כפרמטר לפקודה
cat - הדפסת תוכן של קובץ על המסך
touch - יצירת קובץ חדש
df -h - הצגת מחיצות מערכת הקבצים וכמה נפח תפוס בכל מחיצה וגם איפה עשו לה מאונט
ls - הצגת תוכן של תיקייה. ניתן להוסיף פלאגים להוספת מידע מורחב כמו גם
קבצים מוסתרים. 
clear - ניקוי הטרמינל והפקודות האחרונות שרצו על גבו
htop - הצגת התהליכים שרצים, כמה אחוזים מהסי פי יו הם תופסים ועוד פרטים
lsblk - הדפסת הדייבייסים במערכת ומידע לגבי הנפח שלהם ועוד
fdisk and gdisk diffrences (gpt and mbr) - ביצוע מניפולציות על מחיצות, בהתאם לסכמה הקיימת. משתמשים באפדיסק בשביל אם בי אר, ובג'ידיסק בשביל
ג'יפיטי, שהוא מאפשר יותר נפח פר מחיצה ובאופן כללי יותר נוח מאמביאר.
lsof - יש פעמיים, הסברתי כבר
/mnt - תיקיית מאונטים לשמירת מאונטים של מחיצות שביצענו. בתרגול הזה שמרתי שם את תיקיית דאטא.
זה מיועד למאונטים ידניים.

Exercises :
-----------
learn and expline about chmod ,chown and file premission in linux.
כל דבר בלינוקס הוא תיקייה או קובץ, ולכל אחד כזה יש הרשאות - במקסימום אפשר גם לקרוא, גם לכתוב וגם להריץ.
בקובץ, קריאה וכתיבה זה כמו שזה נשמע, וגם הרצה זה פשוט להריץ אותו. בתיקייה לקרוא זה לראות את
מה שיש בפנים, לכתוב מאפשר לשנות שם של קבצים ותיקיות קיימות או ליצור דברים חדשים. דורש גם הרשאת הרצה אחרת חסר תועלת.
הרצה מאפשר ממש להיכנס לתוך התיקייה.
הפעולה סי אייץ' מוד היא זו שמאפשרת לשנות הרשאות למשתמש עבור קובץ או תיקייה,
הפעולה סי אייץ' אוון היא זו שמאפשרת לשנות בעלות על קובץ או תיקייה.
learn and expline about hard and soft link and the diffrencess.
הארד לינק מצביע למקום פיזי בזיכרון ואפשר שכמה הארד לינקס יצביעו לאותו מקום בזיכרון. שינוי באחד מהם משפיע על כל השאר.
סופט לינק לא מצביע על המקום בזיכרון שבו התוכן של הקובץ מאוחסן, אלא הוא מצביע על המצביע של הקובץ.
learn and expline about lvm.



install virtual box.
create 2 Centos8 vms.
set network-intefaces.
conf dns server.
set ssh trust (without entring password) between the 2 vms.
ג'ינרטתי אצל הקליינט מפתח פרטי וציבורי, על גבי ערוץ בלתי מאובטח העברתי את הציבורי לסרבר,
ובמצב הזה כבר אפשר לבצע את התקשורת.
create file.
mv the file between the machins.
do the vimturot.
install yum and set repos.
install python .
update it to the latest version.
create a new mount with 10G under /mnt/data.
יוצרים קודם כל מחיצה בנפח הזה ואז עושים עליה מאונט. הוספתי את המאונט גם לקובץ
/etc/fstab
change the "PYTHONPATH" environment variable .
שיניתי דרך הטרמינל בשורה אחת פשוטה
reboot the os.
did the mount still exists? if it is ,why? if not try to do it in the right way.
זה נשאר כי השתמשתי בטבלה הייעודית לזה. אם רק עושים מאונטינג בצורה ידנית, זה לא יישאר אחרי ריבוט
what about the env variable? still exists? if not figure out how to keep it after a reboot.
כשסוגרים טרמינל בברירת מחדל המשתנים הסביבתיים נמחקים כי זו שמירה מקומית. מה שצריך לעשות בשביל שיישארו זה את הפקודות הבאות:
sudo nano /etc/profile
gedit ~/.profile

scripts practice:
	- create dir with your name and inside create 30 files with the prefix file and a time stamp (file-12:53:54,file-12:53:59,file-12:54:03).
	- write a script that get a rpm name from client, if the rpm is allready installed, update it to the latest version, if not install it and update it to the latest version.
	- Write a script that executes the command “cat/etc/shadow”. If the command return a 0 exit status, report “command succeeded” and exit with a 0 exit status.
	  If the command returns a non-zero exit status, report “Command failed” and exit with a 1 exit status.
	- Write a cron job that write the memory and cpu usage every hour to a log file in /tmp.
	**notice to commant all your scripts and and print to the terminal logs with time stamps about what happend**
add more 5GB to your mount.
באלל שהמחיצה לא שומרת שום קבצים כרגע, אפשר לערוך דרך ג'יפארטד אחרי ביצוע אנמאונט וביטול מחיצת הסווטפ.
בstop the ntpd service .
השתמשתי בפקודת שורה לעצירת השירות
start the ntpd service.
שוב פקודת שורה להפעלת השירות
make sure that the ntpd service will allways start with the os.
הוספתי את השירות הזה לחלק מהפעלת מערכת ההפעלה דרך פקודת שורה בטרמינל
with locate, try to find one of the files t hat you created (how did you it?).
הייתי צריך לעדכן את הדאטאבייס במערכת הפעלה ואז לבצע חיפוש
install and open account in github.
create new repo on git and create a test file.
now pull your repo,change the file and commit the changes.
התקנתי גיט בלינוקס והשתמשתי במנואל שלו בשביל להבין את הפקודות. את הריפו והקובץ טסט בניתי בווינדוס דרך האתר של גיטהאב.

lets assume that your root mount filled to the brim , what do you think will happend? what can you delete? how can you chack it? which files did you recommend to not delete/.
ישנו החלק של הסוואפ, שמיועד לדפים למקרה שהראם מתמלא וצריך להשתמש בזיכרון הקשיח. אם יש צורך בזיכרון נוסף הכי בטוח להסיר אותו,
כי בברירת מחדל לא אמור להיות שם שום דבר, וקבצים לא מתאחסנים שם, אלא רק דפי זיכרון במצבי קיצון של הראם.
אם המאונט מתמלא (למעשה - המחיצה), לא ניתן לייצר קבצים חדשים או לכתוב אליה, אבל כן ניתן לקרוא מהתכנים ששמורים בה.
לא מסירים לעולם את הלוסט אנד פאונד, בלעדיה למערכת ההפעלה אין אפשרות לזהות שהמחיצה במצב מאונטד ובכלל לזהות מה פורמט הפייל סיסטם עליה.

